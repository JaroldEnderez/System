import React, { Component } from "react";
import Calendar from "./Calendar";
import css from "./Datepicker.module.css";

function zeros(value) {
  const str = value.toString();
  return str.length === 1 ? "0" + str : str;
}

function format(v) {
  return (
    v.getFullYear() + "." + zeros(v.getMonth() + 1) + "." + zeros(v.getDate())
  );
}
function parse(v) {
  return new Date(v);
}

export default class Datepicker extends Component {
  constructor(props) {
    super();
    this.state = {
      show: false,
    };
    this.readonly = props.readonly || false;
  }

  componentDidMount() {
    document.body.addEventListener("mousedown", (e) => this.onDown(e));
  }

  componentWillUnmount() {
    document.body.removeEventListener("mousedown", (e) => this.onDown(e));
  }

  onDown(e) {
    if (this.node && !this.node.contains(e.target)) {
      this.setState({ show: false });
    }
  }

  onFocus() {
    this.setState({ show: true });
  }

  onBlur(e) {
    if (!this.readonly) {
      const v = e.target.value;
      const d = (this.props.parse || parse)(v);
      const { change } = this.props;
      if (this.isDate(d) && change) change(v);
    }
  }

  isDate(date) {
    return date instanceof Date && !isNaN(date.valueOf());
  }

  selectDate(v) {
    this.setState({ show: false });
    const { change } = this.props;
    if (change) change(v);
  }

  render() {
    const { show } = this.state;
    const {
      label = "",
      placeholder = "",
      value = new Date(),
      date = value,
    } = this.props;

    return (
      <div className={css.datepicker}>
        <label className={css.label}>{label}</label>
        <div className={css.inputWrapper}>
          <input
            type="text"
            className={css.input}
            readOnly={this.readonly}
            placeholder={placeholder}
            value={value ? (this.props.format || format)(value) : ""}
            onFocus={() => this.onFocus()}
            onBlur={(e) => this.onBlur(e)}
          />
          {show && (
            <div className={css.wrapper} ref={(node) => (this.node = node)}>
              <Calendar
                date={date}
                value={value}
                change={(v) => this.selectDate(v)}
              />
            </div>
          )}
          <div className={css.icon} />
        </div>
      </div>
    );
  }
}
